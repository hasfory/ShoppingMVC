@model ShoppingDomain.Models.Payment

@{
    ViewData["Title"] = "Створити";
}

<h1>Створити</h1>
<h4>Платіж</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TransactionNumber" class="control-label"></label>
                <input asp-for="TransactionNumber" class="form-control" min="0"/>
                <span asp-validation-for="TransactionNumber" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PaymentAmount" class="control-label"></label>
                <input asp-for="PaymentAmount" class="form-control" min="0" step="0.01" />
                <span asp-validation-for="PaymentAmount" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PaymentMethod" class="control-label"></label>
                <select asp-for="PaymentMethod" class="form-control">
                    <option value="">Оберіть спосіб оплати</option>
                    <option value="Накладений платіж">Накладений платіж</option>
                    <option value="Карта">Карта</option>
                </select>
                <span asp-validation-for="PaymentMethod" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <select asp-for="UserId" class="form-control" asp-items="ViewBag.UserId"></select>
            </div>

            <div class="form-group">
                <input type="submit" value="Створити" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Назад до переліку</a>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let paymentAmountInput = document.querySelector("#PaymentAmount");

            paymentAmountInput.addEventListener("input", function () {
                if (this.value < 0) {
                    this.setCustomValidity("Сума платежу не може бути від’ємною");
                } else {
                    this.setCustomValidity("");
                }
            });

            paymentAmountInput.addEventListener("invalid", function () {
                this.setCustomValidity("Сума платежу не може бути від’ємною");
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            let paymentIdInput = document.querySelector("#TransactionNumber");

            paymentIdInput.addEventListener("input", function () {
                if (this.value < 0) {
                    this.setCustomValidity("Номер транзакції не може бути від’ємним");
                } else {
                    this.setCustomValidity("");
                }
            });

            paymentIdInput.addEventListener("invalid", function () {
                this.setCustomValidity("Номер транзакції не може бути від’ємним");
            });
        });
    </script>
}

